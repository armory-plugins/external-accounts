buildscript {
    repositories {
        mavenCentral()
    }
}

apply plugin: "io.spinnaker.plugin.service-extension"
apply plugin: "maven-publish"
apply plugin: "kotlin"

sourceCompatibility = 1.11
targetCompatibility = 1.11

spinnakerPlugin {
    serviceName = "clouddriver"
    pluginClass = "io.armory.plugin.eap.EAPPlugin"
    requires = "clouddriver>=0.0.0"
}

sourceSets {
    integration {
        java.srcDir "$projectDir/src/integration/java"
        kotlin.srcDir "$projectDir/src/integration/kotlin"
        resources.srcDir "$projectDir/src/integration/resources"

        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

dependencies {
    implementation project(":common")
    implementation project(":git-poller")

    compileOnly(group: 'org.codehaus.groovy', name: 'groovy', version: '2.5.11')
    compileOnly(group: 'org.pf4j', name: 'pf4j', version: "${pf4jVersion}")

    compileOnly(enforcedPlatform("io.spinnaker.kork:kork-bom:${korkVersion}"))
    compileOnly(enforcedPlatform("io.spinnaker.clouddriver:clouddriver-bom:${clouddriverVersion}"))

    compileOnly(group: 'io.spinnaker.kork', name: 'kork-plugins')
    compileOnly(group: 'io.spinnaker.kork', name: 'kork-plugins-spring-api')
    compileOnly(group: 'io.spinnaker.kork', name: 'kork-credentials-api')
    compileOnly(group: 'io.spinnaker.kork', name: 'kork-secrets')

    compileOnly(group: 'io.spinnaker.clouddriver', name: 'clouddriver-api')
    compileOnly(group: 'io.spinnaker.clouddriver', name: 'clouddriver-core')
    compileOnly(group: 'io.spinnaker.clouddriver', name: 'clouddriver-security')
    compileOnly(group: 'io.spinnaker.clouddriver', name: 'clouddriver-kubernetes')
    compileOnly(group: 'io.spinnaker.clouddriver', name: 'clouddriver-cloudfoundry')
    compileOnly(group: 'io.spinnaker.clouddriver', name: 'clouddriver-aws')
    compileOnly(group: 'io.spinnaker.clouddriver', name: 'clouddriver-ecs')
    compileOnly(group: 'io.spinnaker.clouddriver', name: 'clouddriver-docker')

    compileOnly(group: 'com.fasterxml.jackson.core', name: 'jackson-core')
    compileOnly(group: 'com.google.guava', name: 'guava')
    compileOnly(group: 'org.yaml', name: 'snakeyaml')
    compileOnly(group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.7.0.202003110725-r')
    compileOnly(group: 'org.projectlombok', name: 'lombok', version: '1.18.12')

    annotationProcessor(group: 'org.projectlombok', name: 'lombok', version: '1.18.12')

    implementation(group: 'commons-io', name: 'commons-io')

    testImplementation(enforcedPlatform("io.spinnaker.kork:kork-bom:${korkVersion}"))
    testImplementation(enforcedPlatform("io.spinnaker.clouddriver:clouddriver-bom:${clouddriverVersion}"))

    testImplementation(group: 'io.spinnaker.clouddriver', name: 'clouddriver-kubernetes')
    testImplementation(group: 'io.spinnaker.clouddriver', name: 'clouddriver-cloudfoundry')
    testImplementation(group: 'io.spinnaker.clouddriver', name: 'clouddriver-aws')
    testImplementation(group: 'io.spinnaker.clouddriver', name: 'clouddriver-ecs')
    testImplementation(group: 'io.spinnaker.clouddriver', name: 'clouddriver-docker')

    testImplementation(group: 'io.spinnaker.kork', name: 'kork-secrets')
    testImplementation(group: 'io.spinnaker.kork', name: 'kork-credentials-api')
    testImplementation(group: 'com.google.guava', name: 'guava')

    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.vintage:junit-vintage-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.junit.platform:junit-platform-runner"

    testImplementation(group: 'com.fasterxml.jackson.core', name: 'jackson-core')
    testImplementation(group: 'org.mockito', name: 'mockito-core', version: '3.1.0')
    testImplementation(group: 'org.mockito', name: 'mockito-inline', version: '3.1.0')
    testImplementation(group: 'org.codehaus.groovy', name: 'groovy', version: '2.5.11')
    testImplementation(group: 'com.netflix.frigga', name: 'frigga')
    
    integrationImplementation("com.h2database:h2")
    integrationImplementation(group: 'io.strikt', name: 'strikt-core', version: '0.22.1')
    integrationImplementation(group: 'io.spinnaker.kork', name: 'kork-plugins')
    integrationImplementation(group: 'io.spinnaker.kork', name: 'kork-plugins-tck')
    integrationImplementation("io.spinnaker.clouddriver:clouddriver-api-tck")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.3"
        jvmTarget = "11"
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}

test.finalizedBy(integrationTest)