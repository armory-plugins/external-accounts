plugins {
  id 'com.adarshr.test-logger' version '2.1.0'
}

apply plugin: "java-library"

sourceSets {
  integration {
    java.srcDirs = ["src/integration/java"]
    resources.srcDirs = ["src/integration/resources"]
  }
}

configurations {
  integrationImplementation.extendsFrom testImplementation
  integrationRuntime.extendsFrom testRuntime
}

dependencies {
  integrationImplementation project(":clouddriver")

  integrationImplementation("io.spinnaker.clouddriver:clouddriver-web:$clouddriverVersion") {
    exclude group: 'com.fasterxml.jackson.module', module: 'jackson-module-kotlin'
  }

  integrationImplementation "org.springframework.boot:spring-boot-starter-test:2.2.5.RELEASE"
  integrationImplementation "org.testcontainers:testcontainers:1.16.2"
  integrationImplementation "org.testcontainers:mysql:1.16.2"
  integrationImplementation "org.testcontainers:junit-jupiter:1.16.2"
  integrationImplementation "com.google.code.gson:gson:2.8.6"
  integrationImplementation("com.fasterxml.jackson.core:jackson-core") {
    version {
      strictly '2.12.3'
    }
  }
  integrationImplementation("com.fasterxml.jackson.core:jackson-annotations") {
    version {
      strictly '2.12.3'
    }
  }
  integrationImplementation("com.fasterxml.jackson.core:jackson-databind") {
    version {
      strictly '2.12.3'
    }
  }
  integrationImplementation("com.fasterxml.jackson.module:jackson-module-kotlin") {
    version {
      strictly '2.12.3'
    }
  }
  integrationImplementation "com.google.guava:guava:28.2-jre"
  integrationImplementation "mysql:mysql-connector-java:8.0.20"
  integrationImplementation ("io.rest-assured:rest-assured:4.0.0") {
    // Exclude groovy pulled in by rest-assured, so we use kork's version
    exclude group: "org.codehaus.groovy", module: "groovy"
  }
  integrationImplementation "org.yaml:snakeyaml:1.26"
  integrationImplementation "org.projectlombok:lombok:1.18.12"
  integrationImplementation "commons-io:commons-io:2.6"
}

task integrationTest(type: Test) {
  description = 'Runs integration tests.'
  group = 'verification'
  dependsOn(':clean', ':releaseBundle')

  environment "PROJECT_ROOT", project.rootDir.toString()
  environment "BUILD_DIR", "$buildDir"
  environment "SSH_ASKPASS", "$project.rootDir/integration-tests/src/integration/resources/askpass.sh"
  environment "GIT_ROOT", "$project.rootDir/integration-tests/src/integration/gitea_data"
  environment "SSH_KEYS", "$project.rootDir/integration-tests/src/integration/resources/ssh"

  useJUnitPlatform()

  testClassesDirs = sourceSets.integration.output.classesDirs
  classpath = sourceSets.integration.runtimeClasspath
  shouldRunAfter test

  testlogger {
    theme 'standard'
    showStandardStreams true
    showPassedStandardStreams false
    showFailedStandardStreams true
    showPassed false
  }
}
